=head1 NAME

Catalyst::Manual::Plugins - Catalyst Plugins (and Components)

=head1 DESCRIPTION

This section lists the some of the plugins and components that are
available to extend the runtime functionality of Catalyst. The plugins
are not distributed with Catalyst but should be available from CPAN.
They typically require additional modules from CPAN. We will try to
keep this document up to date, but please check CPAN directly for
the latest and greatest.

=head1 PLUGINS

=head2 Catalyst::Plugin::Authentication::CDBI

L<Catalyst::Plugin::Authentication::CDBI> is a CDBI (C<Class::DBI>)
authentication plugin.  Note that it requires a session plugin.

=head2 Catalyst::Plugin::Authentication::LDAP

L<Catalyst::Plugin::Authentication::LDAP> is a plugin allowing you 
to authenticate your web users using an LDAP server. 

=head2 Catalyst::Plugin::Email

L<Catalyst::Plugin::Email> sends email with Catalyst and L<Email::Send>
and L<Email::MIME::Creator>.

=head2 Catalyst::Plugin::Browser

L<Catalyst::Plugin::Browser> extends L<Catalyst::Request> by adding the
capability of browser detection. It returns an instance of
L<HTTP::BrowserDetect>, which lets you get information from the client's
user agent.

=head2 Catalyst::Plugin::Compress::Zlib

L<Catalyst::Plugin::Compress::Zlib> supplies Zlib compression for
Catalyst.

=head2 Catalyst::Plugin::Compress::Bzip2

L<Catalyst::Plugin::Compress::Bzip2> compresses a response using
bzip compression.

=head2 Catalyst::Plugin::FillInForm

L<Catalyst::Plugin::FillInForm> is plugin for Catalyst based on
C<HTML::FillInForm>, which describes itself as a module to automatically
insert data from a previous HTML form into the HTML input, textarea,
radio buttons, checkboxes, and select tags.  C<HTML::FillInForm> is a
subclass of C<HTML::Parser> and uses it to parse the HTML and insert the
values into the form tags.

=head2 Catalyst::Plugin::FormValidator

L<Catalyst::Plugin::FormValidator> is a form validator plugin that uses
L<Data::FormValidator> to validate and set up form data from your
request parameters.  It's a quite thin wrapper around that module, so
most of the relevant information can be found there.

=head2 Catalyst::Plugin::Geography

L<Catalyst::Plugin::Geography> allows you to retrieve various kinds
of geographical information. You can retrieve the country or code from
the current user, from a given IP address, or from a given hostname.

=head2 Catalyst::Plugin::I18N

L<Catalyst::Plugin::I18N> is an internationalization plugin for
Catalyst.  Supports C<mo>/C<po> files and Maketext classes under your
application's I18N namespace.

=head2 Catalyst::Plugin::Observe

L<Catalyst::Plugin::Observe> provides the ability to register AOP-like
callbacks to specific Engine events. Subclasses L<Class::Publisher>.

=head2 Catalyst::Plugin::PageCache

L<Catalyst::Plugin::PageCache> helps improve the performance of slow or
frequently accessed pages by caching the entire output of your page.
Subsequent requests to the page will receive the page very quickly from
cache. Note: At the moment it should be regarded as I<highly
experimental>.

=head2 Catalyst::Plugin::Pluggable

L<Catalyst::Plugin::Pluggable> is a plugin for pluggable Catalyst
applications.

=head2 Catalyst::Plugin::Prototype

L<Catalyst::Plugin::Prototype> is a plugin for the Prototype JavaScript
library. This Plugin allows you to easily implement AJAX functionality
without actually knowing Javascript.

=head2 Catalyst::Plugin::RequireSSL

Use L<Catalyst::Plugin::RequireSSL> if you would like to force visitors
to access certain pages using only SSL mode. An attempt to access the
page in non-SSL mode will receive a redirect into SSL mode. Useful for
shopping carts, user registration forms, and other sensitive data.

=head2 Catalyst::Plugin::Session::FastMmap

L<Catalyst::Plugin::Session::FastMmap> is a session plugin for Catalyst
based on C<Cache::FastMMap>, which uses an mmap'ed file to act as a
shared memory interprocess cache.


=head2 Catalyst::Plugin::Static

L<Catalyst::Plugin::Static> is a plugin to serve static files from
C<$c-E<gt>config-E<gt>{root}>. Intended chiefly for development
purposes.


=head2 Catalyst::Plugin::SubRequest

L<Catalyst::Plugin::SubRequest> is a plugin to allow subrequests to
actions to be made within Catalyst.  Nice for portal software and such.

=head2 Catalyst::Plugin::Textile

L<Catalyst::Plugin::Textile> is a persistent Textile processor for
Catalyst that uses C<Text::Textile>, a Perl-based implementation of Dean
Allen's Textile syntax. Textile is shorthand for doing common formatting
tasks (see L<http://textism.com>).

=head2 Catalyst::Plugin::Unicode

L<Catalyst::Plugin::Unicode> provides a Unicode-aware Catalyst. On
request, it decodes all params from UTF-8 octets into a sequence of
logical characters. On response, it encodes the body into UTF-8 octets.

=head2 Catalyst::Plugin::XMLRPC

L<Catalyst::Plugin::XMLRPC> plugin allows your Controller class to
dispatch XMLRPC methods from its own class.


=head1 COMPONENT MODULES

=head2 Catalyst::Model::CDBI

L<Catalyst::Model::CDBI> is the C<Class::DBI> (CDBI) module class.  It 
is built on top of C<Class::DBI::Loader>, which automates the 
definition of C<Class::DBI> sub-classes by scanning the underlying 
table schemas, setting up columns and primary keys.

=head2 Catalyst::Model::CDBI::Plain

L<Catalyst::Model::CDBI::Plain> is a neutral interface to the
C<Class::DBI> module, which does not attempt to automate table
setup. It allows the user to manually set up C<Class::DBI>
classes, either by doing so within the Catalyst model classes
themselves, or by inheriting from existing C<Class::DBI>
classes.

=head2 Catalyst::Model::CDBI::CRUD

L<Catalyst::Model::CDBI::CRUD> is a subclass of 
C<Catalyst::Model::CDBI> with additional CRUD (create, retrieve, 
update, delete) methods.

=head2 Catalyst::Model::Plucene
L<Catalyst::Model::Plucene> is the model class for the Plucene
search engine.

=head2 Catalyst::View::HTML::Template

L<Catalyst::View::HTML::Template> is a View component for
displaying your stash with L<HTML::Template>.

=head2 Catalyst::View::PSP

L<Catalyst::View::PSP> is a View component for displaying your
stash using PSP, a Perl extension implementing a JSP-like 
templating system; see L<Text::PSP>.

=head2 Catalyst::View::Petal
L<Catalyst::View::Petal> is a View component for displaying 
your stash using Petal, the Perl Template Attribute Language,
an XML-based templating system; see L<Petal>.

=head2 Catalyst::View::Mason

L<Catalyst::View::Mason> is a View component for displaying your stash
with L<HTML::Mason>.

=head2 Catalyst::View::TT

L<Catalyst::View::TT> is a Template Toolkit view. See
L<Template::Manual>.

=head1 AUTHOR

Andrew Ford E<lt>A.Ford@ford-mason.co.ukE<gt>
Marcus Ramberg E<lt>mramberg@cpan.orgE<gt>
Jesse Sheidlower E<lt>jester@panix.comE<gt>

=head1 COPYRIGHT

This program is free software, you can redistribute it and/or modify it under
the same terms as Perl itself.
